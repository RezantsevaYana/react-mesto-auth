{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  // подписка на контекст\n  const currentUser = React.useContext(CurrentUserContext); // стейты в которых содержаться значения инпутов\n\n  const [name, setName] = React.useState(' ');\n  const [description, setDescription] = React.useState(' '); // обработчики изменения инпутов\n\n  function handleNameChange(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleDescriptionChange(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    props.onUpdateUser({\n      name,\n      about: description\n    });\n  } // после зарузки данных о пользователе с апи, эти данные будут использоваться в управляемых компонентах\n\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"_js_editor\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    buttonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"name-input\",\n      type: \"text\",\n      className: \"popup__input popup__input_info_name\",\n      name: \"name\",\n      placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n      value: name || ' ',\n      onChange: handleNameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error name-input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"description-input\",\n      type: \"text\",\n      className: \"popup__input popup__input_info_job\",\n      name: \"about\",\n      placeholder: \"\\u0412\\u0430\\u0448 \\u0440\\u043E\\u0434 \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\",\n      value: description,\n      onChange: handleDescriptionChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error description-input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProfilePopup, \"d75MMh/DM+psVgglraRuByWOFY0=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/rezanceva96/mesto-react/src/components/EditProfilePopup.js"],"names":["React","CurrentUserContext","PopupWithForm","EditProfilePopup","props","currentUser","useContext","name","setName","useState","description","setDescription","handleNameChange","evt","target","value","handleDescriptionChange","handleSubmit","preventDefault","onUpdateUser","about","useEffect","isOpen","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;;AAGA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC7B;AACA,QAAMC,WAAW,GAAGL,KAAK,CAACM,UAAN,CAAiBL,kBAAjB,CAApB,CAF6B,CAG7B;;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,GAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACS,QAAN,CAAe,GAAf,CAAtC,CAL6B,CAO7B;;AACA,WAASG,gBAAT,CAA0BC,GAA1B,EAA+B;AAC3BL,IAAAA,OAAO,CAACK,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAP;AACH;;AAED,WAASC,uBAAT,CAAiCH,GAAjC,EAAsC;AAClCF,IAAAA,cAAc,CAACE,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAd;AACH;;AAED,WAASE,YAAT,CAAsBJ,GAAtB,EAA2B;AACvBA,IAAAA,GAAG,CAACK,cAAJ,GADuB,CAGvB;;AACAd,IAAAA,KAAK,CAACe,YAAN,CAAmB;AACfZ,MAAAA,IADe;AAEfa,MAAAA,KAAK,EAAEV;AAFQ,KAAnB;AAIH,GAxB4B,CA0B7B;;;AAEAV,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AAClBb,IAAAA,OAAO,CAACH,WAAW,CAACE,IAAb,CAAP;AACAI,IAAAA,cAAc,CAACN,WAAW,CAACe,KAAb,CAAd;AACH,GAHD,EAGG,CAACf,WAAD,CAHH;AAOA,sBACI,QAAC,aAAD;AAAe,IAAA,IAAI,EAAC,YAApB;AAAiC,IAAA,KAAK,EAAC,2HAAvC;AAA+D,IAAA,MAAM,EAAED,KAAK,CAACkB,MAA7E;AAAqF,IAAA,OAAO,EAAElB,KAAK,CAACmB,OAApG;AAA6G,IAAA,QAAQ,EAAEN,YAAvH;AAAqI,IAAA,UAAU,EAAC,wDAAhJ;AAAA,4BACE;AAAO,MAAA,EAAE,EAAC,YAAV;AAAuB,MAAA,IAAI,EAAC,MAA5B;AAAmC,MAAA,SAAS,EAAC,qCAA7C;AAAoF,MAAA,IAAI,EAAC,MAAzF;AACgB,MAAA,WAAW,EAAC,6CAD5B;AACuC,MAAA,KAAK,EAAEV,IAAI,IAAI,GADtD;AAC2D,MAAA,QAAQ,EAAEK;AADrE;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAO,MAAA,EAAE,EAAC,mBAAV;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,MAAA,SAAS,EAAC,oCAApD;AACgB,MAAA,IAAI,EAAC,OADrB;AAC6B,MAAA,WAAW,EAAC,gHADzC;AACgE,MAAA,KAAK,EAAEF,WADvE;AACoF,MAAA,QAAQ,EAAEM;AAD9F;AAAA;AAAA;AAAA;AAAA,YAJF,eAME;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA7CQb,gB;;KAAAA,gB;AAgDT,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport PopupWithForm from './PopupWithForm.js';\n\n\nfunction EditProfilePopup(props) {\n    // подписка на контекст\n    const currentUser = React.useContext(CurrentUserContext);\n    // стейты в которых содержаться значения инпутов\n    const [name, setName] = React.useState(' ');\n    const [description, setDescription] = React.useState(' ');\n\n    // обработчики изменения инпутов\n    function handleNameChange(evt) {\n        setName(evt.target.value)\n    }\n\n    function handleDescriptionChange(evt) {\n        setDescription(evt.target.value)\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n\n        // Передаём значения управляемых компонентов во внешний обработчик\n        props.onUpdateUser({\n            name,\n            about: description,\n        });\n    }\n\n    // после зарузки данных о пользователе с апи, эти данные будут использоваться в управляемых компонентах\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser])\n\n\n\n    return (\n        <PopupWithForm name='_js_editor' title='Редактировать профиль' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} buttonText='Сохранить'>\n          <input id=\"name-input\" type=\"text\" className=\"popup__input popup__input_info_name\"  name=\"name\"\n                          placeholder=\"Ваше имя\" value={name || ' '} onChange={handleNameChange} />\n          <span className='error name-input-error'></span>\n          <input id=\"description-input\" type=\"text\" className=\"popup__input popup__input_info_job\"\n                          name=\"about\" placeholder=\"Ваш род деятельности\" value={description} onChange={handleDescriptionChange}/>\n          <span className='error description-input-error'></span>\n        </PopupWithForm>\n    );\n}\n\n\nexport default EditProfilePopup"]},"metadata":{},"sourceType":"module"}