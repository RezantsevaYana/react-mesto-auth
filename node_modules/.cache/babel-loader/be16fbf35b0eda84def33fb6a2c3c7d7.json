{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport { api } from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport DeleteCard from './DeleteCard.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // переменные состояния для открытия попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isDeleteCard, setIsDeleteCard] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({}); // переменная состояния отвечающая за удаление карточки\n\n  const [deleteCard, setDeleteCard] = React.useState({}); // стейт отвечающий за данные текущего пользователя\n\n  const [currentUser, setCurrentUser] = React.useState({}); // переменные состояния для карточек\n\n  const [cards, setCards] = React.useState([]); // загрузка первоначальной коллекции карточек и информации о пользователе\n\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(([profile, cards]) => {\n      setCurrentUser(profile);\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleAddPlaceSubmit(newCard) {\n    api.addCard(newCard);\n    buttonText = 'Cоздать'.then(newCard => {\n      setCards([newCard, ...cards]);\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => closeAllPopups()).finally(buttonText = 'Cоздание');\n  }\n\n  function handleCardLike(card) {\n    // проверка есть ли лайк на текущей карточке\n    // возвращает тру если среди лайкoв есть лайк пользователя\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // console.log(isLiked)\n    // если пользователь не поставил лайк, то мы должны его добавить\n\n    if (!isLiked) {\n      api.likeCard(card._id).then(newCard => {\n        const newCards = cards.map(c => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      api.deleteLikeCard(card._id).then(newCard => {\n        const newCards = cards.map(c => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  } // обработчик удаления карточки\n\n\n  function handleCardDelete() {\n    api.deleteCards(deleteCard._id).then(() => {\n      const newCards = cards.filter(c => c._id !== deleteCard._id);\n      setCards(newCards);\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => closeAllPopups());\n  } // функции открытия попапов\n\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleDeleteCard(card) {\n    setIsDeleteCard(true);\n    setDeleteCard(card);\n  } // функция закрытия попапов\n\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsDeleteCard(false);\n    setSelectedCard({});\n    setDeleteCard({});\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  } // обработчик изменения информации о пользователе\n\n\n  function handleUpdateUser(user) {\n    api.editUserInfo(user).then(user => setCurrentUser(user)).catch(err => {\n      console.log(err);\n    }).finally(() => closeAllPopups());\n  } // обработчик изменения аватара пользователя\n\n\n  function handleUpdateAvatar(item) {\n    api.editAvatar(item).then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => closeAllPopups());\n  }\n\n  return (\n    /*#__PURE__*/\n    // Подключаем дерево компонентов к провайдеру контекста\n    _jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onCardClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onCardDelete: handleDeleteCard,\n          cards: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          addNewCard: handleAddPlaceSubmit,\n          onAddPlace: handleAddPlaceSubmit,\n          buttonText: buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DeleteCard, {\n          isOpen: isDeleteCard,\n          onClose: closeAllPopups,\n          onDeleteCard: handleCardDelete,\n          card: deleteCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          isOpen: selectedCard.link,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"OmrIN6nKQeSyG+gpiVyXlY1vopo=\");\n\n_c = App;\nexport default App; // закрытие попапов на эскейп\n// очищение полей формы при открытии\n// индикаторы загрузки запросов\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rezanceva96/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","DeleteCard","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDeleteCard","setIsDeleteCard","selectedCard","setSelectedCard","deleteCard","setDeleteCard","currentUser","setCurrentUser","cards","setCards","useEffect","Promise","all","getUserInfo","getInitialCards","then","profile","catch","err","console","log","handleAddPlaceSubmit","newCard","addCard","buttonText","finally","closeAllPopups","handleCardLike","card","isLiked","likes","some","i","_id","likeCard","newCards","map","c","error","deleteLikeCard","handleCardDelete","deleteCards","filter","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleDeleteCard","handleCardClick","handleUpdateUser","user","editUserInfo","handleUpdateAvatar","item","editAvatar","res","link"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js'\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js'\nimport { api } from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js'\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js'\nimport DeleteCard from './DeleteCard.js';\n\nfunction App() {\n  // переменные состояния для открытия попапов\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false)\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false)\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false)\n  const [isDeleteCard, setIsDeleteCard] = React.useState(false)\n  \n  const [selectedCard, setSelectedCard] = React.useState({})\n\n  // переменная состояния отвечающая за удаление карточки\n\n  const [deleteCard, setDeleteCard] = React.useState({})\n\n  // стейт отвечающий за данные текущего пользователя\n\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  // переменные состояния для карточек\n\n  const [cards, setCards] = React.useState([])\n\n\n  // загрузка первоначальной коллекции карточек и информации о пользователе\n  React.useEffect(()=> {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n    .then(([profile, cards]) => {\n      setCurrentUser(profile);\n      setCards(cards);\n    })\n    .catch(err => {\n        console.log(err)\n    })\n  }, [])\n\n  \n\n  function handleAddPlaceSubmit(newCard) {\n    api.addCard(newCard)\n      buttonText='Cоздать'\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => closeAllPopups())\n      .finally(buttonText='Cоздание')\n  }\n\n\n\n  function handleCardLike(card) {\n    // проверка есть ли лайк на текущей карточке\n    // возвращает тру если среди лайкoв есть лайк пользователя\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n   // console.log(isLiked)\n\n    // если пользователь не поставил лайк, то мы должны его добавить\n    if (!isLiked) {\n      api\n        .likeCard(card._id)\n        .then((newCard) => {\n          const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n          setCards(newCards);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      api\n        .deleteLikeCard(card._id)\n        .then((newCard) => {\n          const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n          setCards(newCards);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }\n\n// обработчик удаления карточки\n  function handleCardDelete() {\n    api.deleteCards(deleteCard._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== deleteCard._id);\n        setCards(newCards);\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => closeAllPopups())\n  }\n\n \n\n  // функции открытия попапов\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n\n  function handleDeleteCard(card) {\n    setIsDeleteCard(true)\n    setDeleteCard(card)\n\n  }\n\n  // функция закрытия попапов\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setIsDeleteCard(false)\n    setSelectedCard({})\n    setDeleteCard({})\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card)\n  }\n\n  // обработчик изменения информации о пользователе\n\n  function handleUpdateUser(user) {\n    api.editUserInfo(user)\n      .then((user) => setCurrentUser(user))\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => closeAllPopups());\n  }\n\n  // обработчик изменения аватара пользователя\n\n  function handleUpdateAvatar(item) {\n    api.editAvatar(item)\n      .then((res) => {\n        setCurrentUser(res)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => closeAllPopups())\n  }\n\n \n\n\n  return (\n    // Подключаем дерево компонентов к провайдеру контекста\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n        <Main onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onEditAvatar={handleEditAvatarClick}\n              onCardClick = {handleCardClick}\n              onCardLike = {handleCardLike}\n              onCardDelete = {handleDeleteCard}\n              cards = {cards}\n        />\n        <Footer />\n\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser}></EditProfilePopup>\n\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} addNewCard={handleAddPlaceSubmit} onAddPlace={handleAddPlaceSubmit} buttonText={buttonText}></AddPlacePopup>\n      \n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}></EditAvatarPopup>\n      \n        <DeleteCard isOpen={isDeleteCard} onClose={closeAllPopups} onDeleteCard={handleCardDelete} card={deleteCard}></DeleteCard>\n            \n        <ImagePopup card={selectedCard} isOpen={selectedCard.link} onClose={closeAllPopups} />\n\n      </div>\n    </CurrentUserContext.Provider>\n    \n  );\n}\n\nexport default App;\n\n\n// закрытие попапов на эскейп\n// очищение полей формы при открытии\n// индикаторы загрузки запросов\n\n\n"]},"metadata":{},"sourceType":"module"}