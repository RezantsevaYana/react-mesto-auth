{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport { api } from \"../utils/api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport DeleteCard from \"./DeleteCard.js\";\nimport { Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport Login from \"./Login.js\";\nimport Register from \"./Register.js\";\nimport InfoTooLtip from \"./InfoTooltip.js\";\nimport ProtectedRoute from './ProtectedRoute.js';\nimport * as auth from '../utils/auth.js';\nimport notRegister from \"../images/negativ-result.svg\";\nimport register from \"../images/positiv_result.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // переменные состояния для открытия попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isDeleteCard, setIsDeleteCard] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [isInfoTooLtip, setIsInfoTooLtip] = React.useState(false); // переменная состояния отвечающая за удаление карточки\n\n  const [deleteCard, setDeleteCard] = React.useState({}); // стейт отвечающий за данные текущего пользователя\n\n  const [currentUser, setCurrentUser] = React.useState({}); // переменные состояния для карточек\n\n  const [cards, setCards] = React.useState([]); // переменная состояния для идентификатора загрузки\n\n  const [isLoading, setIsLoading] = React.useState(false); // переменная состояния для проверки авторизации пользователя\n\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const navigate = useNavigate(); // переменные состояния для попапов результата регистрации\n\n  const [image, setImage] = React.useState('');\n  const [title, setTitle] = React.useState(''); // загрузка первоначальной коллекции карточек и информации о пользователе\n\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(([profile, cards]) => {\n      setCurrentUser(profile);\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // попап добавления карточки\n\n  function handleAddPlaceSubmit(newCard) {\n    setIsLoading(true);\n    api.addCard(newCard).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }\n\n  function handleCardLike(card) {\n    // проверка есть ли лайк на текущей карточке\n    // возвращает тру если среди лайкoв есть лайк пользователя\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // console.log(isLiked)\n    // если пользователь не поставил лайк, то мы должны его добавить\n\n    if (!isLiked) {\n      api.likeCard(card._id).then(newCard => {\n        setCards(cards => cards.map(c => c._id === card._id ? newCard : c));\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      api.deleteLikeCard(card._id).then(newCard => {\n        setCards(cards => cards.map(c => c._id === card._id ? newCard : c));\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  } // обработчик удаления карточки\n\n\n  function handleCardDelete() {\n    setIsLoading(true);\n    api.deleteCards(deleteCard._id).then(() => {\n      const newCards = cards.filter(c => c._id !== deleteCard._id);\n      setCards(newCards);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  } // функции открытия попапов\n\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleDeleteCard(card) {\n    setIsDeleteCard(true);\n    setDeleteCard(card);\n  } // функция закрытия попапов\n\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsDeleteCard(false);\n    setSelectedCard({});\n    setDeleteCard({});\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  } // обработчик изменения информации о пользователе\n\n\n  function handleUpdateUser(user) {\n    setIsLoading(true);\n    api.editUserInfo(user).then(user => {\n      setCurrentUser(user);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  } // обработчик изменения аватара пользователя\n\n\n  function handleUpdateAvatar(item) {\n    setIsLoading(true);\n    api.editAvatar(item).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  } // обработчик регистрации пользователя\n\n\n  function onRegister(email, password) {\n    auth.register(email, password).then(res => {\n      setTitle('Вы успешно зарегистрировались!');\n      setImage(register);\n      console.log(res);\n      navigate('/sign-in');\n    }).catch(err => {\n      setTitle('Что-то пошло не так! Попробуйте ещё раз.');\n      setImage(notRegister);\n      console.log(err);\n    });\n  } //обработчик авторизации пользователя\n\n\n  function onlogin(email, password) {\n    auth.login(email, password).then(res => {\n      setIsLoggedIn(true);\n      console.log(res);\n      navigate('/');\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return (\n    /*#__PURE__*/\n    // Подключаем дерево компонентов к провайдеру контекста\n    _jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              onlogin: onlogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              onRegister: onRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              component: Main,\n              loggedIn: isLoggedIn,\n              onEditProfile: handleEditProfileClick,\n              onAddPlace: handleAddPlaceClick,\n              onEditAvatar: handleEditAvatarClick,\n              onCardClick: handleCardClick,\n              onCardLike: handleCardLike,\n              onCardDelete: handleDeleteCard,\n              cards: cards\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: isLoggedIn ? '/' : '/sign-in'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          addNewCard: handleAddPlaceSubmit,\n          onAddPlace: handleAddPlaceSubmit,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DeleteCard, {\n          isOpen: isDeleteCard,\n          onClose: closeAllPopups,\n          onDeleteCard: handleCardDelete,\n          card: deleteCard,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          isOpen: selectedCard.link,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InfoTooLtip, {\n          image: image,\n          title: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"Tq1p7YpmUqtZgfEGOBmcO8T3EdQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rezanceva96/react-mesto-auth/src/components/App.js"],"names":["React","Header","Main","Footer","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","DeleteCard","Routes","Route","Navigate","useNavigate","Login","Register","InfoTooLtip","ProtectedRoute","auth","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDeleteCard","setIsDeleteCard","selectedCard","setSelectedCard","isInfoTooLtip","setIsInfoTooLtip","deleteCard","setDeleteCard","currentUser","setCurrentUser","cards","setCards","isLoading","setIsLoading","isLoggedIn","setIsLoggedIn","navigate","image","setImage","title","setTitle","useEffect","Promise","all","getUserInfo","getInitialCards","then","profile","catch","err","console","log","handleAddPlaceSubmit","newCard","addCard","closeAllPopups","finally","handleCardLike","card","isLiked","likes","some","i","_id","likeCard","map","c","error","deleteLikeCard","handleCardDelete","deleteCards","newCards","filter","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleDeleteCard","handleCardClick","handleUpdateUser","user","editUserInfo","handleUpdateAvatar","item","editAvatar","res","onRegister","email","password","register","notRegister","onlogin","login","link"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport { api } from \"../utils/api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport DeleteCard from \"./DeleteCard.js\";\nimport { Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport Login from \"./Login.js\";\nimport Register from \"./Register.js\";\nimport InfoTooLtip from \"./InfoTooltip.js\";\nimport ProtectedRoute from './ProtectedRoute.js'\nimport * as auth from '../utils/auth.js'\n\nimport notRegister from '../images/negativ-result.svg'\nimport register from '../images/positiv_result.svg'\n\n\nfunction App() {\n  // переменные состояния для открытия попапов\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    React.useState(false);\n  const [isDeleteCard, setIsDeleteCard] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  const [isInfoTooLtip, setIsInfoTooLtip] = React.useState(false)\n\n  // переменная состояния отвечающая за удаление карточки\n\n  const [deleteCard, setDeleteCard] = React.useState({});\n\n  // стейт отвечающий за данные текущего пользователя\n\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  // переменные состояния для карточек\n\n  const [cards, setCards] = React.useState([]);\n\n  // переменная состояния для идентификатора загрузки\n\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  // переменная состояния для проверки авторизации пользователя\n\n  const [isLoggedIn, setIsLoggedIn ] = React.useState(false);\n\n  const navigate = useNavigate();\n\n  // переменные состояния для попапов результата регистрации\n\n  const [image, setImage] = React.useState('')\n  const [title, setTitle] = React.useState('')\n\n  // загрузка первоначальной коллекции карточек и информации о пользователе\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([profile, cards]) => {\n        setCurrentUser(profile);\n        setCards(cards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  // попап добавления карточки\n\n  function handleAddPlaceSubmit(newCard) {\n    setIsLoading(true);\n    api\n      .addCard(newCard)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  function handleCardLike(card) {\n    // проверка есть ли лайк на текущей карточке\n    // возвращает тру если среди лайкoв есть лайк пользователя\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // console.log(isLiked)\n\n    // если пользователь не поставил лайк, то мы должны его добавить\n    if (!isLiked) {\n      api\n        .likeCard(card._id)\n        .then((newCard) => {\n          setCards((cards) => cards.map((c) => c._id === card._id ? newCard : c));\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      api\n        .deleteLikeCard(card._id)\n        .then((newCard) => {\n          setCards((cards) => cards.map((c) => c._id === card._id ? newCard : c));\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }\n\n  // обработчик удаления карточки\n  function handleCardDelete() {\n    setIsLoading(true);\n    api\n      .deleteCards(deleteCard._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== deleteCard._id);\n        setCards(newCards);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  // функции открытия попапов\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleDeleteCard(card) {\n    setIsDeleteCard(true);\n    setDeleteCard(card);\n  }\n\n  // функция закрытия попапов\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsDeleteCard(false);\n    setSelectedCard({});\n    setDeleteCard({});\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  // обработчик изменения информации о пользователе\n\n  function handleUpdateUser(user) {\n    setIsLoading(true);\n    api\n      .editUserInfo(user)\n      .then((user) => {\n        setCurrentUser(user);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  // обработчик изменения аватара пользователя\n\n  function handleUpdateAvatar(item) {\n    setIsLoading(true);\n    api\n      .editAvatar(item)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  // обработчик регистрации пользователя\n  function onRegister(email, password) {\n    auth.register(email, password)\n      .then(res => {\n        setTitle('Вы успешно зарегистрировались!')\n        setImage(register)\n        console.log(res)\n        navigate('/sign-in')\n      })\n      .catch((err) => {\n        setTitle('Что-то пошло не так! Попробуйте ещё раз.')\n        setImage(notRegister)\n        console.log(err);\n      })\n  }\n\n  //обработчик авторизации пользователя\n  function onlogin(email, password) {\n    auth.login(email, password)\n      .then(res => {\n        setIsLoggedIn(true);\n        console.log(res)\n        navigate('/')\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n\n\n\n  return (\n    // Подключаем дерево компонентов к провайдеру контекста\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n    <Routes>\n          <Route path='/sign-in' element={<Login onlogin={onlogin} />}>\n            \n          </Route>\n          <Route path='/sign-up' element={<Register onRegister={onRegister} />}>\n          </Route>\n          <Route path='/' element={<ProtectedRoute\n                        component={Main}\n                        loggedIn={isLoggedIn}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onCardClick={handleCardClick}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleDeleteCard}\n                        cards={cards}\n              />}></Route>\n       <Route element={<Navigate to = {isLoggedIn? '/' : '/sign-in'}/>} />\n    </Routes>\n\n    <Footer />\n\n  \n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          isLoading={isLoading}\n        ></EditProfilePopup>\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          addNewCard={handleAddPlaceSubmit}\n          onAddPlace={handleAddPlaceSubmit}\n          isLoading={isLoading}\n        ></AddPlacePopup>\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          isLoading={isLoading}\n        ></EditAvatarPopup>\n\n        <DeleteCard\n          isOpen={isDeleteCard}\n          onClose={closeAllPopups}\n          onDeleteCard={handleCardDelete}\n          card={deleteCard}\n          isLoading={isLoading}\n        ></DeleteCard>\n\n        <ImagePopup\n          card={selectedCard}\n          isOpen={selectedCard.link}\n          onClose={closeAllPopups}\n        />\n        <InfoTooLtip\n          image={image}\n          title={title} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}