{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co'; // запрос на регистрацию на сервере\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResult).then(data => {\n    // сохраняем токен\n    localStorage.setItem('token', data.token);\n  });\n}; // запрос на авторизацию на сервере\n\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResult);\n}; // проверка валидности токена и полученя email для вставки в шапку сайта\n\nexport const checkToken = jwt => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.getItem(jwt)}`\n    }.then(checkResult)\n  });\n};\n\nfunction checkResult(res) {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(`Ошибка: ${res.status}`);\n}","map":{"version":3,"sources":["/Users/rezanceva96/react-mesto-auth/src/utils/auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","checkResult","data","localStorage","setItem","token","login","checkToken","jwt","getItem","res","ok","json","Promise","reject","status"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB,C,CAEP;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAf;AAL2B,GAAvB,CAAL,CAMJO,IANI,CAMCC,WAND,EAMcD,IANd,CAMoBE,IAAD,IAAU;AAChC;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,IAAI,CAACG,KAAnC;AACD,GATI,CAAP;AAUD,CAXI,C,CAaP;;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACd,KAAD,EAAQC,QAAR,KAAqB;AACtC,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAf;AAL2B,GAAvB,CAAL,CAMJO,IANI,CAMCC,WAND,CAAP;AAOD,CARI,C,CAUP;;AAEA,OAAO,MAAMM,UAAU,GAAIC,GAAD,IAAS;AAC/B,SAAOd,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;AACjCK,IAAAA,MAAM,EAAE,KADyB;AAEjCC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB,kBAFX;AAGL,uBAAmB,UAASO,YAAY,CAACM,OAAb,CAAqBD,GAArB,CAA0B;AAHjD,MAKRR,IALQ,CAKHC,WALG;AAFwB,GAAzB,CAAZ;AASH,CAVM;;AAYN,SAASA,WAAT,CAAsBS,GAAtB,EAA4B;AACzB,MAAIA,GAAG,CAACC,EAAR,EAAY;AACR,WAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACH","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\n// запрос на регистрацию на сервере\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email, password }),\n    }).then(checkResult).then((data) => {\n        // сохраняем токен\n        localStorage.setItem('token', data.token);\n      }); \n  };\n\n// запрос на авторизацию на сервере\n\nexport const login = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email, password }),\n    }).then(checkResult);\n  };\n\n// проверка валидности токена и полученя email для вставки в шапку сайта\n\nexport const checkToken = (jwt) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: \"GET\", \n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': \"application/json\",\n            \"Authorization\" : `Bearer ${localStorage.getItem(jwt)}`\n        }\n        .then(checkResult) \n    })\n}\n\n function checkResult (res)  {\n    if (res.ok) {\n        return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n}"]},"metadata":{},"sourceType":"module"}