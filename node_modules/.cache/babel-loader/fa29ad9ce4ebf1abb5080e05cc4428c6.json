{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  // подписка на контекст\n  const currentUser = React.useContext(CurrentUserContext); // стейты в которых содержаться значения инпутов\n\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\"); // обработчики изменения инпутов\n\n  function handleNameChange(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleDescriptionChange(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    props.onUpdateUser({\n      name,\n      about: description\n    });\n  } // после зарузки данных о пользователе с апи, эти данные будут использоваться в управляемых компонентах\n\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"_js_editor\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    isLoading: props.isLoading,\n    buttonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    buttonTextLoading: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0435\\u043D\\u0438\\u0435...\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"name-input\",\n      type: \"text\",\n      className: \"popup__input popup__input_info_name\",\n      name: \"name\",\n      placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n      value: name || \"\",\n      onChange: handleNameChange,\n      minLength: \"2\",\n      maxLength: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error name-input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"description-input\",\n      type: \"text\",\n      className: \"popup__input popup__input_info_job\",\n      name: \"about\",\n      placeholder: \"\\u0412\\u0430\\u0448 \\u0440\\u043E\\u0434 \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\",\n      value: description || \"\",\n      onChange: handleDescriptionChange,\n      minLength: \"2\",\n      maxLength: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error description-input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfilePopup, \"WlxPwiqX56tHi/xw5m3aUoyAzNQ=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/rezanceva96/mesto-react/src/components/EditProfilePopup.js"],"names":["React","CurrentUserContext","PopupWithForm","EditProfilePopup","props","currentUser","useContext","name","setName","useState","description","setDescription","handleNameChange","evt","target","value","handleDescriptionChange","handleSubmit","preventDefault","onUpdateUser","about","useEffect","isOpen","onClose","isLoading"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC/B;AACA,QAAMC,WAAW,GAAGL,KAAK,CAACM,UAAN,CAAiBL,kBAAjB,CAApB,CAF+B,CAG/B;;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACS,QAAN,CAAe,EAAf,CAAtC,CAL+B,CAO/B;;AACA,WAASG,gBAAT,CAA0BC,GAA1B,EAA+B;AAC7BL,IAAAA,OAAO,CAACK,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAP;AACD;;AAED,WAASC,uBAAT,CAAiCH,GAAjC,EAAsC;AACpCF,IAAAA,cAAc,CAACE,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAd;AACD;;AAED,WAASE,YAAT,CAAsBJ,GAAtB,EAA2B;AACzBA,IAAAA,GAAG,CAACK,cAAJ,GADyB,CAGzB;;AACAd,IAAAA,KAAK,CAACe,YAAN,CAAmB;AACjBZ,MAAAA,IADiB;AAEjBa,MAAAA,KAAK,EAAEV;AAFU,KAAnB;AAID,GAxB8B,CA0B/B;;;AAEAV,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AACpBb,IAAAA,OAAO,CAACH,WAAW,CAACE,IAAb,CAAP;AACAI,IAAAA,cAAc,CAACN,WAAW,CAACe,KAAb,CAAd;AACD,GAHD,EAGG,CAACf,WAAD,CAHH;AAKA,sBACE,QAAC,aAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,KAAK,EAAC,2HAFR;AAGE,IAAA,MAAM,EAAED,KAAK,CAACkB,MAHhB;AAIE,IAAA,OAAO,EAAElB,KAAK,CAACmB,OAJjB;AAKE,IAAA,QAAQ,EAAEN,YALZ;AAME,IAAA,SAAS,EAAEb,KAAK,CAACoB,SANnB;AAOE,IAAA,UAAU,EAAC,wDAPb;AAQE,IAAA,iBAAiB,EAAC,iEARpB;AAAA,4BAUE;AACE,MAAA,EAAE,EAAC,YADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAC,qCAHZ;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,WAAW,EAAC,6CALd;AAME,MAAA,KAAK,EAAEjB,IAAI,IAAI,EANjB;AAOE,MAAA,QAAQ,EAAEK,gBAPZ;AAQE,MAAA,SAAS,EAAC,GARZ;AASE,MAAA,SAAS,EAAC;AATZ;AAAA;AAAA;AAAA;AAAA,YAVF,eAqBE;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YArBF,eAsBE;AACE,MAAA,EAAE,EAAC,mBADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAC,oCAHZ;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,WAAW,EAAC,gHALd;AAME,MAAA,KAAK,EAAEF,WAAW,IAAI,EANxB;AAOE,MAAA,QAAQ,EAAEM,uBAPZ;AAQE,MAAA,SAAS,EAAC,GARZ;AASE,MAAA,SAAS,EAAC;AATZ;AAAA;AAAA;AAAA;AAAA,YAtBF,eAiCE;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GAtEQb,gB;;KAAAA,gB;AAwET,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\n\nfunction EditProfilePopup(props) {\n  // подписка на контекст\n  const currentUser = React.useContext(CurrentUserContext);\n  // стейты в которых содержаться значения инпутов\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  // обработчики изменения инпутов\n  function handleNameChange(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleDescriptionChange(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  // после зарузки данных о пользователе с апи, эти данные будут использоваться в управляемых компонентах\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  return (\n    <PopupWithForm\n      name=\"_js_editor\"\n      title=\"Редактировать профиль\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      isLoading={props.isLoading}\n      buttonText=\"Сохранить\"\n      buttonTextLoading=\"Сохранение...\"\n    >\n      <input\n        id=\"name-input\"\n        type=\"text\"\n        className=\"popup__input popup__input_info_name\"\n        name=\"name\"\n        placeholder=\"Ваше имя\"\n        value={name || \"\"}\n        onChange={handleNameChange}\n        minLength=\"2\"\n        maxLength=\"30\"\n      />\n      <span className=\"error name-input-error\"></span>\n      <input\n        id=\"description-input\"\n        type=\"text\"\n        className=\"popup__input popup__input_info_job\"\n        name=\"about\"\n        placeholder=\"Ваш род деятельности\"\n        value={description || \"\"}\n        onChange={handleDescriptionChange}\n        minLength=\"2\"\n        maxLength=\"30\"\n      />\n      <span className=\"error description-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}