{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; //import logo from './logo.svg';\n//import '../index.css';\n\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport { api } from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // переменные состояния для открытия попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({}); // стейт отвечающий за данные текущего пользователя\n\n  const [currentUser, setCurrentUser] = React.useState({}); // переменные состояния для карточек\n\n  const [cards, setCards] = React.useState([]); // загрузка первоначльной коллекции карточек, один раз при сборке\n\n  React.useEffect(() => {\n    api.getInitialCards().then(data => {\n      setCards(data.map(item => ({\n        title: item.name,\n        alt: item.name,\n        url: item.link,\n        like: item.likes.length,\n        likes: item.likes,\n        _id: item._id\n      })));\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleAddPlaceSubmit(newCard) {\n    api.addCard(newCard).then(newCard => {\n      setCards([newCard, ...cards]);\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => closeAllPopups());\n  }\n\n  function handleCardLike(card) {\n    // проверка есть ли лайк на текущей карточке\n    // возвращает тру если среди лайкoв есть лайк пользователя\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    console.log(isLiked); // если пользователь не поставил лайк, то мы должны его добавить\n\n    if (!isLiked) {\n      api.likeCard(card._id).then(newCard => {\n        const newCards = cards.map(c => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      api.deleteLikeCard(card._id).then(newCard => {\n        const newCards = cards.map(c => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCards(card._id).then(() => {\n      const newCards = cards.filter(c => c._id !== card._id);\n      setCards(newCards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  React.useEffect(() => {\n    api.getUserInfo().then(profile => {\n      setCurrentUser(profile);\n    }).catch(err => {\n      console.log(err);\n    });\n  }); // функции открытия попапов\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  } // функция закрытия попапов\n\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(user) {\n    api.editUserInfo(user).then(user => setCurrentUser(user)).catch(err => {\n      console.log(err);\n    }).finally(() => closeAllPopups());\n  }\n\n  function handleUpdateAvatar(item) {\n    api.editAvatar(item).then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => closeAllPopups());\n  }\n\n  return (\n    /*#__PURE__*/\n    // внедряем даные с помощбю провадера контекста, всему поддереву теперь доступен этот контекст. \n    // То есть мы подключили дерево компонентов к провайдеру контекста\n    _jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onCardClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete,\n          cards: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          addNewCard: handleAddPlaceSubmit,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          name: \"-delete\",\n          title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n          buttonText: \"\\u0414\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          isOpen: selectedCard.url,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"2Pi3ELbJlE1eZD4RILYbq11Srcg=\");\n\n_c = App;\nexport default App; // при удалении карточки вылезает сначала белая карточки и ошибка про ключи\n// при добавлении карточки вылезает сначала белая карточка и ошибка про ключи, после обновления карточка появляется\n// невозможно изменить инпуты \n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rezanceva96/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","useEffect","getInitialCards","then","data","map","item","title","name","alt","url","link","like","likes","length","_id","catch","err","console","log","handleAddPlaceSubmit","newCard","addCard","finally","closeAllPopups","handleCardLike","card","isLiked","some","i","likeCard","newCards","c","error","deleteLikeCard","handleCardDelete","deleteCards","filter","getUserInfo","profile","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","handleUpdateUser","user","editUserInfo","handleUpdateAvatar","editAvatar","res"],"mappings":"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","sourcesContent":["import React from 'react';\n//import logo from './logo.svg';\n//import '../index.css';\nimport Header from './Header.js';\nimport Main from './Main.js'\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js'\nimport { api } from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js'\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js'\n\nfunction App() {\n\n  // переменные состояния для открытия попапов\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false)\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false)\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false)\n  \n  const [selectedCard, setSelectedCard] = React.useState({})\n\n  // стейт отвечающий за данные текущего пользователя\n\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  // переменные состояния для карточек\n\n  const [cards, setCards] = React.useState([])\n\n  // загрузка первоначльной коллекции карточек, один раз при сборке\n\n  React.useEffect(() => {\n    api.getInitialCards()\n    .then(data => {\n      setCards(\n        data.map((item) => ({\n          title: item.name,\n          alt: item.name,\n          url: item.link,\n          like: item.likes.length,\n          likes: item.likes,\n          _id: item._id\n        }))\n      );\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }, [])\n\n  function handleAddPlaceSubmit(newCard) {\n    api.addCard(newCard)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => closeAllPopups())\n  }\n\n\n\n  function handleCardLike(card) {\n    // проверка есть ли лайк на текущей карточке\n    // возвращает тру если среди лайкoв есть лайк пользователя\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    console.log(isLiked)\n\n    // если пользователь не поставил лайк, то мы должны его добавить\n    if (!isLiked) {\n      api\n        .likeCard(card._id)\n        .then((newCard) => {\n          const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n          setCards(newCards);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      api\n        .deleteLikeCard(card._id)\n        .then((newCard) => {\n          const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n          setCards(newCards);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }\n\n\n  function handleCardDelete(card) {\n    api.deleteCards(card._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id);\n        setCards(newCards);\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n\n  React.useEffect(() => {\n    api.getUserInfo()\n      .then((profile) => {\n        setCurrentUser(profile)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  })\n\n  // функции открытия попапов\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n\n  // функция закрытия попапов\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setSelectedCard({})\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card)\n  }\n\n  function handleUpdateUser(user) {\n    api.editUserInfo(user)\n      .then((user) => setCurrentUser(user))\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => closeAllPopups());\n  }\n\n  function handleUpdateAvatar(item) {\n    api.editAvatar(item)\n      .then((res) => {\n        setCurrentUser(res)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => closeAllPopups())\n  }\n\n\n  \n\n\n  return (\n    // внедряем даные с помощбю провадера контекста, всему поддереву теперь доступен этот контекст. \n    // То есть мы подключили дерево компонентов к провайдеру контекста\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n        <Main onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onEditAvatar={handleEditAvatarClick}\n              onCardClick = {handleCardClick}\n              onCardLike = {handleCardLike}\n              onCardDelete = {handleCardDelete}\n              cards = {cards}\n\n        />\n        <Footer />\n\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser}></EditProfilePopup>\n\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} addNewCard={handleAddPlaceSubmit} onAddPlace={handleAddPlaceSubmit}></AddPlacePopup>\n      \n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}></EditAvatarPopup>\n      \n        <PopupWithForm name='-delete' title='Вы уверены?' buttonText='Да' />\n            \n        <ImagePopup card={selectedCard} isOpen={selectedCard.url} onClose={closeAllPopups} />\n\n      </div>\n    </CurrentUserContext.Provider>\n    \n  );\n}\n\nexport default App;\n\n// при удалении карточки вылезает сначала белая карточки и ошибка про ключи\n// при добавлении карточки вылезает сначала белая карточка и ошибка про ключи, после обновления карточка появляется\n// невозможно изменить инпуты \n\n\n"]},"metadata":{},"sourceType":"module"}