{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/mesto-react/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  // подписываем компонент на контекст\n  const currentUser = React.useContext(CurrentUserContext); // определяем, являемся ли мы владельцем текущей карточки\n\n  const isOwn = props.card.owner._id === currentUser._id; // переменная с помощью которой определяется видиомсть иконки удаления на карточке\n\n  const cardDeleteButtonClassName = `element__delete ${isOwn ? \" \" : \"element__delete_disabled\"}`; // определяем есть ли у карточки лайк\n\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id); // переменная с помощью которой определяется стоит лайк или нет\n\n  const cardLikeButtonClassName = `element__button ${isLiked ? \"element__button_active\" : \" \"}`;\n\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n\n  function handleCardDeletePopup() {\n    props.onCardDelete(props.card);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"elements\",\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"element\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: cardDeleteButtonClassName,\n        type: \"button\",\n        onClick: handleCardDeletePopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.card.link,\n        className: \"element__photo\",\n        alt: props.card.name,\n        onClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"element__title\",\n          children: props.card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element__likes\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: cardLikeButtonClassName,\n            type: \"button\",\n            onClick: handleLikeClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"element__counter\",\n            children: props.card.likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/rezanceva96/mesto-react/src/components/Card.js"],"names":["React","CurrentUserContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","handleClick","onCardClick","handleLikeClick","onCardLike","handleCardDeletePopup","onCardDelete","link","name","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB;AACA,QAAMC,WAAW,GAAGJ,KAAK,CAACK,UAAN,CAAiBJ,kBAAjB,CAApB,CAFmB,CAInB;;AACA,QAAMK,KAAK,GAAGH,KAAK,CAACI,IAAN,CAAWC,KAAX,CAAiBC,GAAjB,KAAyBL,WAAW,CAACK,GAAnD,CALmB,CAOnB;;AAEA,QAAMC,yBAAyB,GAAI,mBACjCJ,KAAK,GAAG,GAAH,GAAS,0BACf,EAFD,CATmB,CAanB;;AACA,QAAMK,OAAO,GAAGR,KAAK,CAACI,IAAN,CAAWK,KAAX,CAAiBC,IAAjB,CAAuBC,CAAD,IAAOA,CAAC,CAACL,GAAF,KAAUL,WAAW,CAACK,GAAnD,CAAhB,CAdmB,CAgBnB;;AAEA,QAAMM,uBAAuB,GAAI,mBAC/BJ,OAAO,GAAG,wBAAH,GAA8B,GACtC,EAFD;;AAIA,WAASK,WAAT,GAAuB;AACrBb,IAAAA,KAAK,CAACc,WAAN,CAAkBd,KAAK,CAACI,IAAxB;AACD;;AAED,WAASW,eAAT,GAA2B;AACzBf,IAAAA,KAAK,CAACgB,UAAN,CAAiBhB,KAAK,CAACI,IAAvB;AACD;;AAED,WAASa,qBAAT,GAAiC;AAC/BjB,IAAAA,KAAK,CAACkB,YAAN,CAAmBlB,KAAK,CAACI,IAAzB;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAC,UAAnB;AAAA,2BACE;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA,8BACE;AACE,QAAA,SAAS,EAAEG,yBADb;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAEU;AAHX;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AACE,QAAA,GAAG,EAAEjB,KAAK,CAACI,IAAN,CAAWe,IADlB;AAEE,QAAA,SAAS,EAAC,gBAFZ;AAGE,QAAA,GAAG,EAAEnB,KAAK,CAACI,IAAN,CAAWgB,IAHlB;AAIE,QAAA,OAAO,EAAEP;AAJX;AAAA;AAAA;AAAA;AAAA,cANF,eAYE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA,oBAAgCb,KAAK,CAACI,IAAN,CAAWgB;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAER,uBADb;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,OAAO,EAAEG;AAHX;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAG,YAAA,SAAS,EAAC,kBAAb;AAAA,sBAAiCf,KAAK,CAACI,IAAN,CAAWK,KAAX,CAAiBY;AAAlD;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GA9DQtB,I;;KAAAA,I;AAgET,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Card(props) {\n  // подписываем компонент на контекст\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = props.card.owner._id === currentUser._id;\n\n  // переменная с помощью которой определяется видиомсть иконки удаления на карточке\n\n  const cardDeleteButtonClassName = `element__delete ${\n    isOwn ? \" \" : \"element__delete_disabled\"\n  }`;\n\n  // определяем есть ли у карточки лайк\n  const isLiked = props.card.likes.some((i) => i._id === currentUser._id);\n\n  // переменная с помощью которой определяется стоит лайк или нет\n\n  const cardLikeButtonClassName = `element__button ${\n    isLiked ? \"element__button_active\" : \" \"\n  }`;\n\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n\n  function handleCardDeletePopup() {\n    props.onCardDelete(props.card);\n  }\n\n  return (\n    <section className=\"elements\">\n      <article className=\"element\">\n        <button\n          className={cardDeleteButtonClassName}\n          type=\"button\"\n          onClick={handleCardDeletePopup}\n        ></button>\n        <img\n          src={props.card.link}\n          className=\"element__photo\"\n          alt={props.card.name}\n          onClick={handleClick}\n        />\n        <div className=\"element__container\">\n          <h2 className=\"element__title\">{props.card.name}</h2>\n          <div className=\"element__likes\">\n            <button\n              className={cardLikeButtonClassName}\n              type=\"button\"\n              onClick={handleLikeClick}\n            ></button>\n            <p className=\"element__counter\">{props.card.likes.length}</p>\n          </div>\n        </div>\n      </article>\n    </section>\n  );\n}\n\nexport default Card;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}